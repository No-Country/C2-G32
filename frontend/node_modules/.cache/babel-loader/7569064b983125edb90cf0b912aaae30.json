{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alici\\\\OneDrive\\\\Documents\\\\GitHub\\\\C2-G32\\\\frontend\\\\src\\\\components\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Formulario = () => {\n  _s();\n\n  const [formularioEnviado, setFormularioEnviado] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        nombre: \"\",\n        apellido: \"\",\n        contraseña: \"\",\n        confirmacion: \"\",\n        correo: \"\",\n        username: \"\"\n      },\n      validate: valores => {\n        let errores = {}; //Validacion nombre\n\n        if (!valores.nombre) {\n          errores.nombre = \"Por favor ingresa un nombre\";\n        } else if (!/^[a-zA-ZÀ-ÿ\\s]{1,40}$/.test(valores.nombre)) {\n          errores.nombre = \"El nombre solo puede contener letras y espacios\";\n        } //validacion apellido\n\n\n        if (!valores.apellido) {\n          errores.apellido = \"Por favor ingresa un apellido\";\n        } else if (!/^[a-zA-ZÀ-ÿ\\s]{1,40}$/.test(valores.apellido)) {\n          errores.apellido = \"El apellido solo puede contener letras y espacios\";\n        } //validacion username\n\n\n        if (!valores.username) {\n          errores.apellido = \"Por favor ingresa un username\";\n        } else if (!/^[a-zA-ZÀ-ÿ\\s]{1,40}$/.test(valores.username)) {\n          errores.username = \"El username solo puede contener letras y espacios\";\n        } //validacion contraseña\n\n\n        if (!valores.contraseña) {\n          errores.contraseña = \"Por favor ingresa una contraseña\";\n        } else if (!/^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{8,16}$/.test(valores.contraseña)) {\n          errores.contraseña = \"La contraseña debe tener al entre 8 y 16 caracteres, al menos un dígito, al menos una minúscula y al menos una mayúscula. Puede tener otros símbolos.\";\n        } //validacion confirmación\n\n\n        if (!valores.contraseña === valores.confirmacion) {\n          errores.confirmacion = \"Por favor ambas contraseñas deben ser iguales\";\n        } else if (!/^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{8,16}$/.test(valores.confirmacion)) {\n          errores.confirmacion = \"Por favor ingresa una contraseña\";\n        }\n\n        if (!valores.correo) {\n          // validacion correo\n          errores.correo = \"Por favor ingresa un correo electronico\";\n        } else if (!/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(valores.correo)) {\n          errores.correo = \"El correo solo puede contener letras, numeros, puntos, caracteres especiales, guiones y guion bajo.\";\n        }\n\n        return errores;\n      },\n      onSubmit: (valores, _ref) => {\n        let {\n          resetForm\n        } = _ref;\n        let values = {\n          \"first_name\": valores.nombre,\n          \"last_name\": valores.apellido,\n          \"username\": valores.username,\n          \"email\": valores.correo,\n          \"password\": valores.contraseña\n        };\n        let json_values = JSON.stringify(values);\n        console.log(json_values);\n        fetch('http://localhost:8000/api/v1/users', {\n          mode: 'no-cors',\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': '*'\n          },\n          body: json_values\n        });\n        resetForm();\n        setFormularioEnviado(true);\n        setTimeout(() => setFormularioEnviado(false), 4000);\n      },\n      children: _ref2 => {\n        let {\n          errors\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-12\",\n            style: {\n              paddingBottom: \"50px\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              className: \"formulario\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"nombre\",\n                  children: \"Nombre\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  type: \"text\",\n                  id: \"nombre\",\n                  name: \"nombre\",\n                  placeholder: \"Nombre\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"nombre\",\n                  component: () => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"error\",\n                    children: errors.nombre\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 36\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"apellido\",\n                  children: \"Apellido\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  type: \"text\",\n                  id: \"apellido\",\n                  name: \"apellido\",\n                  placeholder: \"Apellido\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"apellido\",\n                  component: () => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"error\",\n                    children: errors.apellido\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 36\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"username\",\n                  children: \"Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  type: \"text\",\n                  id: \"username\",\n                  name: \"username\",\n                  placeholder: \"username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"username\",\n                  component: () => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"error\",\n                    children: errors.username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"contrase\\xF1a\",\n                  children: \"Contrase\\xF1a\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  type: \"password\",\n                  id: \"contrase\\xF1a\",\n                  name: \"contrase\\xF1a\",\n                  placeholder: \"Contrase\\xF1a\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"contrase\\xF1a\",\n                  component: () => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"error\",\n                    children: errors.contraseña\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"confirmacion\",\n                  children: \" Verificar Contrase\\xF1a\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  type: \"password\",\n                  id: \"confirmacion\",\n                  name: \"confirmacion\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"contrase\\xF1a\",\n                  component: () => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"error\",\n                    children: errors.confirmacion\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"correo\",\n                  children: \"Correo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  type: \"text\",\n                  name: \"correo\",\n                  placeholder: \"correo@correo.com\",\n                  id: \"correo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"correo\",\n                  component: () => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"error\",\n                    children: errors.correo\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 36\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Enviar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 15\n              }, this), formularioEnviado && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"exito\",\n                children: \"Formulario enviado con exito!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Formulario, \"G9r3Q7/S5N1TGzInf2Xc+0z1TNM=\");\n\n_c = Formulario;\nexport default Formulario;\n\nvar _c;\n\n$RefreshReg$(_c, \"Formulario\");","map":{"version":3,"sources":["C:/Users/alici/OneDrive/Documents/GitHub/C2-G32/frontend/src/components/Form.js"],"names":["React","useState","Formik","Form","Field","ErrorMessage","Navbar","Formulario","formularioEnviado","setFormularioEnviado","nombre","apellido","contraseña","confirmacion","correo","username","valores","errores","test","resetForm","values","json_values","JSON","stringify","console","log","fetch","mode","method","headers","body","setTimeout","errors","paddingBottom"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport Navbar from './Navbar'\r\nconst Formulario = () => {\r\n  const [formularioEnviado, setFormularioEnviado] = useState(false);\r\n\r\n  return (\r\n    <>\r\n    <Navbar/>\r\n      <Formik\r\n        initialValues={{\r\n          nombre: \"\",\r\n          apellido: \"\",\r\n          contraseña: \"\",\r\n          confirmacion: \"\",\r\n          correo: \"\",\r\n          username: \"\",\r\n        }}\r\n        validate={(valores) => {\r\n          let errores = {};\r\n\r\n          //Validacion nombre\r\n          if (!valores.nombre) {\r\n            errores.nombre = \"Por favor ingresa un nombre\";\r\n          } else if (!/^[a-zA-ZÀ-ÿ\\s]{1,40}$/.test(valores.nombre)) {\r\n            errores.nombre = \"El nombre solo puede contener letras y espacios\";\r\n          }\r\n          //validacion apellido\r\n          if (!valores.apellido) {\r\n            errores.apellido = \"Por favor ingresa un apellido\";\r\n          } else if (!/^[a-zA-ZÀ-ÿ\\s]{1,40}$/.test(valores.apellido)) {\r\n            errores.apellido =\r\n              \"El apellido solo puede contener letras y espacios\";\r\n          }\r\n\r\n          //validacion username\r\n          if (!valores.username) {\r\n            errores.apellido = \"Por favor ingresa un username\";\r\n          } else if (!/^[a-zA-ZÀ-ÿ\\s]{1,40}$/.test(valores.username)) {\r\n            errores.username =\r\n              \"El username solo puede contener letras y espacios\";\r\n          }\r\n\r\n          //validacion contraseña\r\n          if (!valores.contraseña) {\r\n            errores.contraseña = \"Por favor ingresa una contraseña\";\r\n          } else if (\r\n            !/^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{8,16}$/.test(\r\n              valores.contraseña\r\n            )\r\n          ) {\r\n            errores.contraseña =\r\n              \"La contraseña debe tener al entre 8 y 16 caracteres, al menos un dígito, al menos una minúscula y al menos una mayúscula. Puede tener otros símbolos.\";\r\n          }\r\n          //validacion confirmación\r\n          if (!valores.contraseña === valores.confirmacion) {\r\n            errores.confirmacion =\r\n              \"Por favor ambas contraseñas deben ser iguales\";\r\n          } else if (\r\n            !/^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{8,16}$/.test(\r\n              valores.confirmacion\r\n            )\r\n          ) {\r\n            errores.confirmacion = \"Por favor ingresa una contraseña\";\r\n          }\r\n          if (!valores.correo) {\r\n            // validacion correo\r\n            errores.correo = \"Por favor ingresa un correo electronico\";\r\n          } else if (\r\n            !/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(\r\n              valores.correo\r\n            )\r\n          ) {\r\n            errores.correo =\r\n              \"El correo solo puede contener letras, numeros, puntos, caracteres especiales, guiones y guion bajo.\";\r\n          }\r\n\r\n          return errores;\r\n        }}\r\n        onSubmit={(valores, { resetForm }) => {\r\n          let values = {\r\n            \"first_name\": valores.nombre,\r\n            \"last_name\": valores.apellido,\r\n            \"username\": valores.username,\r\n            \"email\": valores.correo,\r\n            \"password\": valores.contraseña\r\n           };\r\n\r\n          let json_values = JSON.stringify(values)\r\n          console.log(json_values)\r\n          fetch('http://localhost:8000/api/v1/users', {\r\n            mode: 'no-cors',\r\n            method: 'post',\r\n            headers: {'Content-Type':'application/json','Access-Control-Allow-Origin': '*'},\r\n            body: json_values\r\n           });\r\n\r\n          resetForm();\r\n\r\n          setFormularioEnviado(true);\r\n          setTimeout(() => setFormularioEnviado(false), 4000);\r\n        }}\r\n      >\r\n        {({ errors }) => (\r\n          <div className=\"container\">\r\n            <div className=\"col-12\" style={{ paddingBottom: \"50px\" }}>\r\n              <Form className=\"formulario\">\r\n              <div>\r\n                <label htmlFor=\"nombre\">Nombre</label>\r\n                <Field\r\n                  type=\"text\"\r\n                  id=\"nombre\"\r\n                  name=\"nombre\"\r\n                  placeholder=\"Nombre\"\r\n                />\r\n                <ErrorMessage\r\n                  name=\"nombre\"\r\n                  component={() => <div className=\"error\">{errors.nombre}</div>}\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"apellido\">Apellido</label>\r\n                <Field\r\n                  type=\"text\"\r\n                  id=\"apellido\"\r\n                  name=\"apellido\"\r\n                  placeholder=\"Apellido\"\r\n                />\r\n                <ErrorMessage\r\n                  name=\"apellido\"\r\n                  component={() => <div className=\"error\">{errors.apellido}</div>}\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"username\">Username</label>\r\n                <Field\r\n                  type=\"text\"\r\n                  id=\"username\"\r\n                  name=\"username\"\r\n                  placeholder=\"username\"\r\n                />\r\n                <ErrorMessage\r\n                  name=\"username\"\r\n                  component={() => (\r\n                    <div className=\"error\">{errors.username}</div>\r\n                  )}\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"contraseña\">Contraseña</label>\r\n                <Field\r\n                  type=\"password\"\r\n                  id=\"contraseña\"\r\n                  name=\"contraseña\"\r\n                  placeholder=\"Contraseña\"\r\n                />\r\n                <ErrorMessage\r\n                  name=\"contraseña\"\r\n                  component={() => (\r\n                    <div className=\"error\">{errors.contraseña}</div>\r\n                  )}\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"confirmacion\"> Verificar Contraseña</label>\r\n                <Field type=\"password\" id=\"confirmacion\" name=\"confirmacion\" />\r\n                <ErrorMessage\r\n                  name=\"contraseña\"\r\n                  component={() => (\r\n                    <div className=\"error\">{errors.confirmacion}</div>\r\n                  )}\r\n                />\r\n              </div>\r\n              <div>\r\n                <label htmlFor=\"correo\">Correo</label>\r\n                <Field\r\n                  type=\"text\"\r\n                  name=\"correo\"\r\n                  placeholder=\"correo@correo.com\"\r\n                  id=\"correo\"\r\n                />\r\n                <ErrorMessage\r\n                  name=\"correo\"\r\n                  component={() => <div className=\"error\">{errors.correo}</div>}\r\n                />\r\n              </div>\r\n\r\n              <button type=\"submit\">Enviar</button>\r\n              {formularioEnviado && (\r\n                <p className=\"exito\">Formulario enviado con exito!</p>\r\n              )}\r\n            </Form>\r\n          </div>\r\n          </div>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\nexport default Formulario;\r\n"]},"metadata":{},"sourceType":"module"}
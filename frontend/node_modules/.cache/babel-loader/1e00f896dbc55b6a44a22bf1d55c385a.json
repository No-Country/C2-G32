{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alici\\\\OneDrive\\\\Documents\\\\GitHub\\\\C2-G32\\\\frontend\\\\src\\\\components\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Formulario = () => {\n  _s();\n\n  const [formularioEnviado, setFormularioEnviado] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        nombre: \"\",\n        apellido: \"\",\n        contraseña: \"\",\n        confirmacion: \"\",\n        correo: \"\"\n      },\n      validate: valores => {\n        let errores = {}; //Validacion nombre\n\n        if (!valores.nombre) {\n          errores.nombre = \"Por favor ingresa un nombre\";\n        } else if (!/^[a-zA-ZÀ-ÿ\\s]{1,40}$/.test(valores.nombre)) {\n          errores.nombre = \"El nombre solo puede contener letras y espacios\";\n        } //validacion apellido\n\n\n        if (!valores.apellido) {\n          errores.apellido = \"Por favor ingresa un apellido\";\n        } else if (!/^[a-zA-ZÀ-ÿ\\s]{1,40}$/.test(valores.apellido)) {\n          errores.apellido = \"El apellido solo puede contener letras y espacios\";\n        } //validacion contraseña\n\n\n        if (!valores.contraseña) {\n          errores.contraseña = \"Por favor ingresa una contraseña\";\n        } else if (!/^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{8,16}$/.test(valores.contraseña)) {\n          errores.contraseña = \"La contraseña debe tener al entre 8 y 16 caracteres, al menos un dígito, al menos una minúscula y al menos una mayúscula. Puede tener otros símbolos.\";\n        } //validacion confirmación\n\n\n        if (!valores.contraseña == valores.confirmacion) {\n          errores.confirmacion = \"Por favor ambas contraseñas deben ser iguales\";\n        } else if (!/^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{8,16}$/.test(valores.confirmacion)) {\n          errores.confirmacion = \"Por favor ingresa una contraseña\";\n        }\n\n        if (!valores.correo) {\n          // validacion correo\n          errores.correo = \"Por favor ingresa un correo electronico\";\n        } else if (!/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(valores.correo)) {\n          errores.correo = \"El correo solo puede contener letras, numeros, puntos, caracteres especiales, guiones y guion bajo.\";\n        }\n\n        return errores;\n      },\n      onSubmit: (valores, _ref) => {\n        let {\n          resetForm\n        } = _ref;\n        resetForm();\n        setFormularioEnviado(true);\n        setTimeout(() => setFormularioEnviado(false), 4000);\n      },\n      children: _ref2 => {\n        let {\n          errors\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          className: \"formulario\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"nombre\",\n              children: \"Nombre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"text\",\n              id: \"nombre\",\n              name: \"nombre\",\n              placeholder: \"Nombre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"nombre\",\n              component: () => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error\",\n                children: errors.nombre\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 34\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"apellido\",\n              children: \"Apellido\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"text\",\n              id: \"apellido\",\n              name: \"apellido\",\n              placeholder: \"Apellido\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"apellido\",\n              component: () => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error\",\n                children: errors.apellido\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 34\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"contrase\\xF1a\",\n              children: \"Contrase\\xF1a\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"password\",\n              id: \"contrase\\xF1a\",\n              name: \"contrase\\xF1a\",\n              placeholder: \"Contrase\\xF1a\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"contrase\\xF1a\",\n              component: () => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error\",\n                children: errors.contraseña\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"confirmacion\",\n              children: \" Verificar Contrase\\xF1a\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"password\",\n              id: \"confirmacion\",\n              name: \"confirmacion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"contrase\\xF1a\",\n              component: () => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error\",\n                children: errors.confirmacion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"correo\",\n              children: \"Correo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"text\",\n              name: \"correo\",\n              placeholder: \"correo@correo.com\",\n              id: \"correo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"correo\",\n              component: () => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error\",\n                children: errors.correo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 34\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Enviar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), formularioEnviado && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"exito\",\n            children: \"Formulario enviado con exito!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Formulario, \"G9r3Q7/S5N1TGzInf2Xc+0z1TNM=\");\n\n_c = Formulario;\nexport default Formulario;\n\nvar _c;\n\n$RefreshReg$(_c, \"Formulario\");","map":{"version":3,"sources":["C:/Users/alici/OneDrive/Documents/GitHub/C2-G32/frontend/src/components/Form.js"],"names":["React","useState","Formik","Form","Field","ErrorMessage","Navbar","Formulario","formularioEnviado","setFormularioEnviado","nombre","apellido","contraseña","confirmacion","correo","valores","errores","test","resetForm","setTimeout","errors"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport Navbar from './Navbar'\r\nconst Formulario = () => {\r\n  const [formularioEnviado, setFormularioEnviado] = useState(false);\r\n\r\n  return (\r\n    <>\r\n    <Navbar/>\r\n      <Formik\r\n        initialValues={{\r\n          nombre: \"\",\r\n          apellido: \"\",\r\n          contraseña: \"\",\r\n          confirmacion: \"\",\r\n          correo: \"\",\r\n        }}\r\n        validate={(valores) => {\r\n          let errores = {};\r\n\r\n          //Validacion nombre\r\n          if (!valores.nombre) {\r\n            errores.nombre = \"Por favor ingresa un nombre\";\r\n          } else if (!/^[a-zA-ZÀ-ÿ\\s]{1,40}$/.test(valores.nombre)) {\r\n            errores.nombre = \"El nombre solo puede contener letras y espacios\";\r\n          }\r\n          //validacion apellido\r\n          if (!valores.apellido) {\r\n            errores.apellido = \"Por favor ingresa un apellido\";\r\n          } else if (!/^[a-zA-ZÀ-ÿ\\s]{1,40}$/.test(valores.apellido)) {\r\n            errores.apellido =\r\n              \"El apellido solo puede contener letras y espacios\";\r\n          }\r\n          //validacion contraseña\r\n          if (!valores.contraseña) {\r\n            errores.contraseña = \"Por favor ingresa una contraseña\";\r\n          } else if (\r\n            !/^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{8,16}$/.test(\r\n              valores.contraseña\r\n            )\r\n          ) {\r\n            errores.contraseña =\r\n              \"La contraseña debe tener al entre 8 y 16 caracteres, al menos un dígito, al menos una minúscula y al menos una mayúscula. Puede tener otros símbolos.\";\r\n          }\r\n          //validacion confirmación\r\n          if (!valores.contraseña == valores.confirmacion) {\r\n            errores.confirmacion =\r\n              \"Por favor ambas contraseñas deben ser iguales\";\r\n          } else if (\r\n            !/^(?=\\w*\\d)(?=\\w*[A-Z])(?=\\w*[a-z])\\S{8,16}$/.test(\r\n              valores.confirmacion\r\n            )\r\n          ) {\r\n            errores.confirmacion = \"Por favor ingresa una contraseña\";\r\n          }\r\n          if (!valores.correo) {\r\n            // validacion correo\r\n            errores.correo = \"Por favor ingresa un correo electronico\";\r\n          } else if (\r\n            !/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(\r\n              valores.correo\r\n            )\r\n          ) {\r\n            errores.correo =\r\n              \"El correo solo puede contener letras, numeros, puntos, caracteres especiales, guiones y guion bajo.\";\r\n          }\r\n\r\n          return errores;\r\n        }}\r\n        onSubmit={(valores, { resetForm }) => {\r\n          resetForm();\r\n\r\n          setFormularioEnviado(true);\r\n          setTimeout(() => setFormularioEnviado(false), 4000);\r\n        }}\r\n      >\r\n        {({ errors }) => (\r\n          <Form className=\"formulario\">\r\n            <div>\r\n              <label htmlFor=\"nombre\">Nombre</label>\r\n              <Field\r\n                type=\"text\"\r\n                id=\"nombre\"\r\n                name=\"nombre\"\r\n                placeholder=\"Nombre\"\r\n              />\r\n              <ErrorMessage\r\n                name=\"nombre\"\r\n                component={() => <div className=\"error\">{errors.nombre}</div>}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"apellido\">Apellido</label>\r\n              <Field\r\n                type=\"text\"\r\n                id=\"apellido\"\r\n                name=\"apellido\"\r\n                placeholder=\"Apellido\"\r\n              />\r\n              <ErrorMessage\r\n                name=\"apellido\"\r\n                component={() => <div className=\"error\">{errors.apellido}</div>}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"contraseña\">Contraseña</label>\r\n              <Field\r\n                type=\"password\"\r\n                id=\"contraseña\"\r\n                name=\"contraseña\"\r\n                placeholder=\"Contraseña\"\r\n              />\r\n              <ErrorMessage\r\n                name=\"contraseña\"\r\n                component={() => (\r\n                  <div className=\"error\">{errors.contraseña}</div>\r\n                )}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"confirmacion\"> Verificar Contraseña</label>\r\n              <Field type=\"password\" id=\"confirmacion\" name=\"confirmacion\" />\r\n              <ErrorMessage\r\n                name=\"contraseña\"\r\n                component={() => (\r\n                  <div className=\"error\">{errors.confirmacion}</div>\r\n                )}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"correo\">Correo</label>\r\n              <Field\r\n                type=\"text\"\r\n                name=\"correo\"\r\n                placeholder=\"correo@correo.com\"\r\n                id=\"correo\"\r\n              />\r\n              <ErrorMessage\r\n                name=\"correo\"\r\n                component={() => <div className=\"error\">{errors.correo}</div>}\r\n              />\r\n            </div>\r\n\r\n            <button type=\"submit\">Enviar</button>\r\n            {formularioEnviado && (\r\n              <p className=\"exito\">Formulario enviado con exito!</p>\r\n            )}\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </>\r\n  );\r\n};\r\nexport default Formulario;\r\n"]},"metadata":{},"sourceType":"module"}